<?php

namespace app\models;

use Yii;

/**
 * This is the model class for table "canti".
 *
 * @property int $ID
 * @property string $nome
 * @property string $file
 * @property string $url
 * @property string $descrizione
 * @property int $modo
 */
class Canto extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'greg_canti';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['nome','modo'], 'required'],
            [['descrizione','url'], 'string'],
            [['modo'], 'integer'],
            [['nome'], 'string', 'max' => 100],
//            [['file'], 'file', 'skipOnEmpty' => false, 'extensions' => 'pdf, png, jpg, gif'],
        ];
    }

    public function getPrintUrl(): string
    {;
        return ($this->url)? '<a href="' . $this->url .'" target="_blank">scarica</a>':'';
    }

    public function getModoName(): string
    {
        if (!$this->modo) {
            return '';
        }
        return ModoSearch::findOne($this->modo)->nome;
    }
    public function upload()
    {
        if ($this->validate()) {
           $this->file->saveAs('uploads/' . $this->file->baseName . '.' . $this->file->extension);
            return true;
        } else {
            return false;
        }
    }

    public function beforeDelete()
    {
        $AnalisiPresenti =  AnalisiSearch::find()->where(['canto_ID' => $this->ID])->count();
        if ($AnalisiPresenti) {
            Yii::$app->session->setFlash('error', "Canto non eliminabile: ci sono analisi");
            return false;
        }
        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'ID' => 'ID',
            'url' => 'URL',
            'nome' => 'Nome',
            'modoName' => 'Modo',
            'file' => 'File',
            'descrizione' => 'Descrizione',
            'modo' => 'Modo',
        ];
    }
    /**
     * Gets query for [[Analisi]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getModo()
    {
        return $this->hasOne(Modo::class, ['ID' => 'modo']);
    }
}
